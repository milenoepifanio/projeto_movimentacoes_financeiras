WITH account_out_by_pix AS (
  SELECT 
    A.ACCOUNT_ID, 
    A.ACCOUNT_NUMBER || '-' || A.ACCOUNT_CHECK_DIGIT AS ACCOUNT_NUMBER, 
    TO_CHAR(C.ACTION_TIMESTAMP, 'YYYY-MM') AS TRANSITIONS_DATE, 
    ROUND(SUM(B.PIX_AMOUNT):: numeric, 2) AS AMOUNT_OUT,
	COUNT(ID) AS QUANTITY
  FROM ACCOUNTS A 
    LEFT JOIN PIX_MOVEMENTS B ON A.ACCOUNT_ID = B.ACCOUNT_ID 
    LEFT JOIN D_TIME C ON B.PIX_COMPLETED_AT = C.TIME_ID 
  WHERE 
    B.STATUS = 'completed' 
    AND IN_OR_OUT = 'pix_out' 
  GROUP BY 
    A.ACCOUNT_ID, 
    A.ACCOUNT_NUMBER || '-' || A.ACCOUNT_CHECK_DIGIT, 
    TO_CHAR(C.ACTION_TIMESTAMP, 'YYYY-MM')
),

monthly_summary AS (
   SELECT 
      TRANSITIONS_DATE AS MONTH,
      COUNT(DISTINCT ACCOUNT_ID) AS NUMBER_OF_ACCOUNTS,
      SUM(QUANTITY) AS NUMBER_OF_TRANSFERS,
      ROUND(SUM(AMOUNT_OUT), 2) AS AMOUNT_OF_TRANSFERS
   FROM account_out_by_pix
   GROUP BY TRANSITIONS_DATE
),
	
monthly_metrics AS (
  SELECT 
    M.MONTH,
    M.NUMBER_OF_ACCOUNTS,
    M.NUMBER_OF_TRANSFERS,
    M.AMOUNT_OF_TRANSFERS,
    LAG(M.NUMBER_OF_TRANSFERS) OVER (ORDER BY M.MONTH) AS L1M_NUMBER_OF_TRANSFERS,
    AVG(M.NUMBER_OF_TRANSFERS) OVER (ORDER BY M.MONTH ROWS BETWEEN 3 PRECEDING AND 1 PRECEDING) AS L3M_AVG_NUMBER_OF_TRANSFERS,
    LAG(M.NUMBER_OF_ACCOUNTS) OVER (ORDER BY M.MONTH) AS L1M_NUMBER_OF_ACCOUNTS,
    AVG(M.NUMBER_OF_ACCOUNTS) OVER (ORDER BY M.MONTH ROWS BETWEEN 3 PRECEDING AND 1 PRECEDING) AS L3M_AVG_NUMBER_OF_ACCOUNTS
  FROM monthly_summary M
)

SELECT 
  MONTH,
  NUMBER_OF_ACCOUNTS,
  NUMBER_OF_TRANSFERS,
  AMOUNT_OF_TRANSFERS,
  ROUND((NUMBER_OF_TRANSFERS::NUMERIC / NULLIF(L1M_NUMBER_OF_TRANSFERS, 0) - 1) * 100, 3) AS "%L1M Number of Transfers",
  ROUND(((NUMBER_OF_TRANSFERS::NUMERIC / NULLIF(L3M_AVG_NUMBER_OF_TRANSFERS, 0)) - 1) * 100, 3) AS "%L3M AVG Number of Transfers",
  ROUND((NUMBER_OF_ACCOUNTS::NUMERIC / NULLIF(L1M_NUMBER_OF_ACCOUNTS, 0) - 1) * 100, 3) AS "%L1M Number of accounts",
  ROUND(((NUMBER_OF_ACCOUNTS::NUMERIC / NULLIF(L3M_AVG_NUMBER_OF_ACCOUNTS, 0)) - 1) * 100, 3) AS "%L3M AVG Number of accounts"
FROM monthly_metrics
ORDER BY MONTH;