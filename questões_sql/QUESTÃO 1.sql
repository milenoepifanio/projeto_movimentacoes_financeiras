WITH transitions_ins AS (
  SELECT 
    A.ACCOUNT_ID, 
    A.ACCOUNT_NUMBER || '-' || A.ACCOUNT_CHECK_DIGIT AS ACCOUNT_NUMBER, 
    TO_CHAR(C.ACTION_TIMESTAMP, 'YYYY-MM') AS TRANSITIONS_DATE, 
    ROUND(SUM(B.AMOUNT):: numeric, 2) AS AMOUNT_IN
  FROM ACCOUNTS A 
    LEFT JOIN TRANSFER_INS B ON A.ACCOUNT_ID = B.ACCOUNT_ID 
    LEFT JOIN D_TIME C ON B.transaction_completed_at = C.TIME_ID 
  WHERE B.STATUS = 'completed' 
  GROUP BY 
    A.ACCOUNT_ID, 
    A.ACCOUNT_NUMBER || '-' || A.ACCOUNT_CHECK_DIGIT, 
    TO_CHAR(C.ACTION_TIMESTAMP, 'YYYY-MM')
), 
	
transitions_ins_pix AS (
  SELECT 
    A.ACCOUNT_ID, 
    A.ACCOUNT_NUMBER || '-' || A.ACCOUNT_CHECK_DIGIT AS ACCOUNT_NUMBER, 
    TO_CHAR(C.ACTION_TIMESTAMP, 'YYYY-MM') AS TRANSITIONS_DATE, 
    ROUND(SUM(B.PIX_AMOUNT):: numeric, 2) AS AMOUNT_IN
  FROM ACCOUNTS A 
    LEFT JOIN PIX_MOVEMENTS B ON A.ACCOUNT_ID = B.ACCOUNT_ID 
    LEFT JOIN D_TIME C ON B.PIX_COMPLETED_AT = C.TIME_ID 
  WHERE 
    B.STATUS = 'completed' 
    AND IN_OR_OUT = 'pix_in' 
  GROUP BY 
    A.ACCOUNT_ID, 
    A.ACCOUNT_NUMBER || '-' || A.ACCOUNT_CHECK_DIGIT, 
    TO_CHAR(C.ACTION_TIMESTAMP, 'YYYY-MM')
), 
	
transitions_outs AS (
  SELECT 
    A.ACCOUNT_ID, 
    A.ACCOUNT_NUMBER || '-' || A.ACCOUNT_CHECK_DIGIT AS ACCOUNT_NUMBER, 
    TO_CHAR(C.ACTION_TIMESTAMP, 'YYYY-MM') AS TRANSITIONS_DATE, 
    ROUND(SUM(B.AMOUNT):: numeric, 2) AS AMOUNT_OUT
  FROM ACCOUNTS A 
    LEFT JOIN TRANSFER_OUTS B ON A.ACCOUNT_ID = B.ACCOUNT_ID 
    LEFT JOIN D_TIME C ON B.transaction_completed_at = C.TIME_ID 
  WHERE B.STATUS = 'completed' 
  GROUP BY 
    A.ACCOUNT_ID, 
    A.ACCOUNT_NUMBER || '-' || A.ACCOUNT_CHECK_DIGIT, 
    TO_CHAR(C.ACTION_TIMESTAMP, 'YYYY-MM')
), 
	
transitions_out_pix AS (
  SELECT 
    A.ACCOUNT_ID, 
    A.ACCOUNT_NUMBER || '-' || A.ACCOUNT_CHECK_DIGIT AS ACCOUNT_NUMBER, 
    TO_CHAR(C.ACTION_TIMESTAMP, 'YYYY-MM') AS TRANSITIONS_DATE, 
    ROUND(SUM(B.PIX_AMOUNT):: numeric, 2) AS AMOUNT_OUT
  FROM ACCOUNTS A 
    LEFT JOIN PIX_MOVEMENTS B ON A.ACCOUNT_ID = B.ACCOUNT_ID 
    LEFT JOIN D_TIME C ON B.PIX_COMPLETED_AT = C.TIME_ID 
  WHERE 
    B.STATUS = 'completed' 
    AND IN_OR_OUT = 'pix_out' 
  GROUP BY 
    A.ACCOUNT_ID, 
    A.ACCOUNT_NUMBER || '-' || A.ACCOUNT_CHECK_DIGIT, 
    TO_CHAR(C.ACTION_TIMESTAMP, 'YYYY-MM')
),

account_monthly_balance AS (
   SELECT 
      COALESCE(ins.ACCOUNT_ID, ins_pix.ACCOUNT_ID, outs.ACCOUNT_ID, outs_pix.ACCOUNT_ID) AS ACCOUNT_ID,
      COALESCE(ins.ACCOUNT_NUMBER, ins_pix.ACCOUNT_NUMBER, outs.ACCOUNT_NUMBER, outs_pix.ACCOUNT_NUMBER) AS ACCOUNT_NUMBER,
      COALESCE(ins.TRANSITIONS_DATE, ins_pix.TRANSITIONS_DATE, outs.TRANSITIONS_DATE, outs_pix.TRANSITIONS_DATE) AS TRANSITIONS_DATE,
      COALESCE(ins.AMOUNT_IN, 0) + COALESCE(ins_pix.AMOUNT_IN, 0) AS TOTAL_AMOUNT_IN,
      COALESCE(outs.AMOUNT_OUT, 0) + COALESCE(outs_pix.AMOUNT_OUT, 0) AS TOTAL_AMOUNT_OUT,
      (COALESCE(ins.AMOUNT_IN, 0) + COALESCE(ins_pix.AMOUNT_IN, 0)) - (COALESCE(outs.AMOUNT_OUT, 0) + COALESCE(outs_pix.AMOUNT_OUT, 0)) AS MONTHLY_BALANCE
   FROM transitions_ins ins
   FULL OUTER JOIN transitions_ins_pix ins_pix ON ins.ACCOUNT_ID = ins_pix.ACCOUNT_ID AND ins.TRANSITIONS_DATE = ins_pix.TRANSITIONS_DATE
   FULL OUTER JOIN transitions_outs outs ON ins.ACCOUNT_ID = outs.ACCOUNT_ID AND ins.TRANSITIONS_DATE = outs.TRANSITIONS_DATE
   FULL OUTER JOIN transitions_out_pix outs_pix ON ins.ACCOUNT_ID = outs_pix.ACCOUNT_ID AND ins.TRANSITIONS_DATE = outs_pix.TRANSITIONS_DATE
)


SELECT * FROM account_monthly_balance
ORDER BY ACCOUNT_ID, TRANSITIONS_DATE;